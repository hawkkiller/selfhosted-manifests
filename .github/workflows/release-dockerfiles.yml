name: Release Dockerfiles

permissions:
  contents: write # write releases
  id-token: write
  packages: write # write packages

on:
  push:
    paths: 
      - 'dockerfiles/**'
      - .github/workflows/release-dockerfiles.yml
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [mysql_s3_apply_dump, mysql_s3_upload_dump] 
        include:
          - dockerfile: 'mysql_s3_apply_dump.Dockerfile'
            image: mysql_s3_apply_dump
          - dockerfile: 'mysql_s3_upload_dump.Dockerfile'
            image: mysql_s3_upload_dump
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Version
        id: get_version
        run: |
          version=$(grep ${{ matrix.image }} dockerfiles/VERSION | cut -d'=' -f2)
          echo "::set-output name=version::$version"

      - name: Generate images meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/hawkkiller/${{ matrix.image }}
          tags: |
            type=raw,value=${{ steps.get_version.outputs.version }}
            type=raw,value=latest
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          sbom: true
          provenance: true
          context: ./dockerfiles
          platforms: linux/amd64,linux/arm64/v8
          builder: ${{ steps.buildx.outputs.name }}
          file: ./dockerfiles/${{ matrix.dockerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  